Cluster:
  Fn::ImportValue:
    !Sub '${AppName}-${EnvName}-ClusterId'
TaskDefinition: !Ref TaskDefinition
{{- if .DesiredCountOnSpot}}
DesiredCount: !Ref TaskCount
{{- else if .Autoscaling}}
DesiredCount: !GetAtt DynamicDesiredCountAction.DesiredCount
{{- else }}
DesiredCount: !Ref TaskCount
{{- end}}
DeploymentConfiguration:
  DeploymentCircuitBreaker:
    Enable: true
    Rollback: true
  MinimumHealthyPercent: 100
  MaximumPercent: 200
PropagateTags: SERVICE
{{- if .ExecuteCommand }}
EnableExecuteCommand: true
{{- end }}
{{- if not .CapacityProviders }}
LaunchType: FARGATE
{{- end }}
{{- if .CapacityProviders }}
CapacityProviderStrategy:
  {{- range $cps := .CapacityProviders}}
  - CapacityProvider: {{$cps.CapacityProvider}}
    Weight: {{$cps.Weight}}
    {{- if $cps.Base }}
    Base: {{$cps.Base}}
    {{- end}}
  {{- end}}
{{- end }}
NetworkConfiguration:
  AwsvpcConfiguration:
    AssignPublicIp: {{.Network.AssignPublicIP}}
    Subnets:
      - Fn::Select:
        - 0
        - Fn::Split:
          - ','
          {{- if eq .Network.SubnetsType "IsolatedSubnets"}}
          - Fn::ImportValue: !Sub '${AppName}-${EnvName}-PrivateSubnets'
          {{- else}}
          - Fn::ImportValue: !Sub '${AppName}-${EnvName}-{{.Network.SubnetsType}}'
          {{- end}}
      - Fn::Select:
        - 1
        - Fn::Split:
          - ','
          {{- if eq .Network.SubnetsType "IsolatedSubnets"}}
          - Fn::ImportValue: !Sub '${AppName}-${EnvName}-PrivateSubnets'
          {{- else}}
          - Fn::ImportValue: !Sub '${AppName}-${EnvName}-{{.Network.SubnetsType}}'
          {{- end}}
    SecurityGroups:
      - Fn::ImportValue: !Sub '${AppName}-${EnvName}-EnvironmentSecurityGroup'
      {{- range $sg := .Network.SecurityGroups}}
      - {{$sg}}
      {{- end}}
      {{- if .NestedStack}}{{$stackName := .NestedStack.StackName}}{{range $sg := .NestedStack.SecurityGroupOutputs}}
      - Fn::GetAtt: [{{$stackName}}, Outputs.{{$sg}}]
      {{- end}}{{end}}
